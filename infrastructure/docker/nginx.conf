# DiagnoChain Nginx Configuration
# High-performance reverse proxy and load balancer

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Performance tuning
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 10m;
    large_client_header_buffers 4 4k;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/manifest+json
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # HSTS (uncomment for production with SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Log format for detailed monitoring
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$upstream_addr $upstream_status';

    access_log /var/log/nginx/access.log detailed;

    # Upstream backend servers
    upstream diagnochain_backend {
        least_conn;
        server backend:3001 max_fails=3 fail_timeout=30s;
        # Add more backend servers for production
        # server backend-2:3001 max_fails=3 fail_timeout=30s;
        # server backend-3:3001 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    upstream diagnochain_bitcoin {
        least_conn;
        server bitcoin-services:3002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream diagnochain_frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # WebSocket upstream for real-time features
    upstream diagnochain_websocket {
        server backend:3001;
        keepalive 8;
    }

    # SSL Configuration (for production)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # ================================
    # Main Application Server
    # ================================
    server {
        listen 80;
        listen [::]:80;
        server_name diagnochain.local localhost;

        # Redirect to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # Security
        limit_conn perip 20;
        limit_conn perserver 1000;

        # Root location - serve frontend
        location / {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://diagnochain_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Frontend-specific settings
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://diagnochain_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # API-specific timeouts
            proxy_read_timeout 120s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            
            # Handle large uploads
            client_max_body_size 10m;
            
            # Enable caching for GET requests
            location ~* ^/api/(doctors|specialties|stats) {
                proxy_pass http://diagnochain_backend;
                proxy_cache api_cache;
                proxy_cache_valid 200 5m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                add_header X-Cache-Status $upstream_cache_status;
            }
        }

        # Authentication endpoints with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://diagnochain_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Bitcoin services
        location /btc/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://diagnochain_bitcoin/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Bitcoin service timeouts
            proxy_read_timeout 180s;
            proxy_connect_timeout 15s;
            proxy_send_timeout 180s;
        }

        # WebSocket connections for real-time updates
        location /ws {
            proxy_pass http://diagnochain_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 60s;
        }

        # Static assets with aggressive caching
        location /static/ {
            proxy_pass http://diagnochain_frontend;
            
            # Cache static assets for 1 year
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Gzip static files
            gzip_static on;
            
            # Security for static files
            location ~* \.(js|css)$ {
                add_header Content-Security-Policy "default-src 'self'";
            }
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://diagnochain_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Quick health check timeouts
            proxy_read_timeout 10s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            
            # No caching for health checks
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Metrics endpoint (restrict access)
        location /metrics {
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            allow 10.0.0.0/8;     # Private networks
            deny all;
            
            proxy_pass http://diagnochain_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Block access to sensitive files
        location ~* \.(env|log|sql|bak|backup|old)$ {
            deny all;
            return 404;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }

        # Custom 404 page
        error_page 404 /404.html;
        location = /404.html {
            proxy_pass http://diagnochain_frontend/404.html;
            internal;
        }

        # Custom 50x page
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            proxy_pass http://diagnochain_frontend/50x.html;
            internal;
        }
    }

    # ================================
    # HTTPS Server (Production)
    # ================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name diagnochain.com www.diagnochain.com;

        # SSL certificates (Let's Encrypt)
        ssl_certificate /etc/nginx/ssl/diagnochain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/diagnochain.com.key;
        
        # SSL security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/diagnochain.com.chain.pem;
        
        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https: wss:;" always;

        # Same locations as HTTP server but with additional security
        include /etc/nginx/conf.d/locations.conf;
    }

    # ================================
    # API Subdomain
    # ================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.diagnochain.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/api.diagnochain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/api.diagnochain.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://diagnochain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://diagnochain.com";
                add_header Access-Control-Allow-Methods "GET, POST, PATCH, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://diagnochain_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # API optimizations
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_read_timeout 120s;
            proxy_connect_timeout 10s;
        }

        # Bitcoin API with separate rate limiting
        location /btc/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://diagnochain_bitcoin/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 300s;  # Longer timeout for Bitcoin operations
            proxy_connect_timeout 15s;
        }
    }

    # ================================
    # Monitoring Subdomains
    # ================================
    server {
        listen 443 ssl http2;
        server_name grafana.diagnochain.com;

        ssl_certificate /etc/nginx/ssl/grafana.diagnochain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/grafana.diagnochain.com.key;

        # Basic auth for monitoring (production)
        auth_basic "DiagnoChain Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ================================
    # Cache Configuration
    # ================================
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=1d use_temp_path=off;

    # ================================
    # Load Balancing Configuration
    # ================================

    # Sticky sessions for stateful connections (if needed)
    # map $cookie_sessionid $backend_pool {
    #     ~.+     backend_sticky;
    #     default backend;
    # }

    # Geo-based routing (for global deployment)
    # geo $closest_backend {
    #     default backend-us-east;
    #     ~^(?P<class_a>\d+)\.(?P<class_b>\d+)\.(?P<class_c>\d+)\.(?P<class_d>\d+)$ backend-us-east;
    #     # European IPs
    #     ~^(2|5|31|37|46|62|77|78|79|80|81|82|83|84|85|86|87|88|89|90|91|92|93|94|95|109|141|151|178|185|188|193|194|195|213|217)\..*$ backend-eu-west;
    #     # Asian IPs
    #     ~^(1|14|27|36|39|42|43|49|58|59|60|61|101|103|106|110|111|112|113|114|115|116|117|118|119|120|121|122|123|124|125|126|133|150|153|163|171|175|180|182|183|202|203|210|211|218|219|220|221|222|223)\..*$ backend-asia;
    # }

    # ================================
    # Security and DDoS Protection
    # ================================

    # Block known bad IPs
    # include /etc/nginx/conf.d/blacklist.conf;

    # Block common attack patterns
    location ~* (eval\(|union.*select|insert.*into|drop.*table|create.*table|alter.*table) {
        deny all;
        return 444;
    }

    # Block file extension attacks
    location ~* \.(aspx|jsp|cgi|sh|bat|exe|dll)$ {
        deny all;
        return 444;
    }

    # Limit request size for different endpoints
    location /api/consultations/create {
        client_max_body_size 5m;  # Allow medical image uploads
        proxy_pass http://diagnochain_backend;
    }

    location /api/ipfs/upload {
        client_max_body_size 10m;  # IPFS uploads
        proxy_pass http://diagnochain_backend;
    }

    # ================================
    # Development Tools (dev only)
    # ================================

    # PgAdmin
    server {
        listen 80;
        server_name pgadmin.diagnochain.local;
        
        location / {
            proxy_pass http://pgadmin:80;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Redis Commander
    server {
        listen 80;
        server_name redis.diagnochain.local;
        
        location / {
            proxy_pass http://redis-commander:8081;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Block Explorer
    server {
        listen 80;
        server_name explorer.diagnochain.local;
        
        location / {
            proxy_pass http://blockscout:4000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ================================
    # Monitoring Endpoints
    # ================================

    # Nginx status page for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            allow 10.0.0.0/8;     # Private networks
            deny all;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # ================================
    # Error Handling
    # ================================

    # Custom error pages
    error_page 400 /error/400.html;
    error_page 401 /error/401.html;
    error_page 403 /error/403.html;
    error_page 404 /error/404.html;
    error_page 429 /error/429.html;
    error_page 500 501 502 503 504 /error/50x.html;

    # ================================
    # Logging Configuration
    # ================================

    # Separate log files for different services
    map $uri $log_suffix {
        ~^/api/          api;
        ~^/btc/          bitcoin;
        ~^/ws            websocket;
        default          frontend;
    }

    # Custom log format with additional context
    log_format api_log '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '$request_time $upstream_response_time '
                      '$upstream_addr "$http_authorization"';

    # Conditional logging
    map $status $log_4xx_5xx {
        ~^[23] 0;
        default 1;
    }

    # ================================
    # Development Overrides
    # ================================

    # In development, include additional configuration
    include /etc/nginx/conf.d/dev-*.conf;
}

# ================================
# Stream Block for TCP/UDP Load Balancing
# ================================
stream {
    # Bitcoin P2P load balancing
    upstream bitcoin_p2p {
        server bitcoin-node:18333;
        # Add more Bitcoin nodes in production
    }

    server {
        listen 18333;
        proxy_pass bitcoin_p2p;
        proxy_timeout 30s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }

    # Lightning P2P load balancing
    upstream lightning_p2p {
        server lightning-node:9735;
    }

    server {
        listen 9735;
        proxy_pass lightning_p2p;
        proxy_timeout 60s;
        proxy_responses 1;
    }
}

# ================================
# Include Additional Configurations
# ================================

# Include rate limiting configurations
include /etc/nginx/conf.d/rate-limiting.conf;

# Include security configurations
include /etc/nginx/conf.d/security.conf;

# Include caching configurations  
include /etc/nginx/conf.d/caching.conf;